image: registry.cn-hangzhou.aliyuncs.com/choerodon-tools/cifront:0.7.0

stages:
#  - node_dep_install
  - node_build
  - docker_build

#node_dep_install:
#  stage: node_dep_install
#  script:
#    - node_module

node_build:
  stage: node_build
  script:
    - node_module
    - node_build
    - cp -r dist /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}/dist
  only:
    - master

docker_build:
  image: registry.cn-hangzhou.aliyuncs.com/choerodon-tools/cibase:0.7.0
  stage: docker_build
  script:
    - docker_build
    - rm -rf /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    - chart_build
  only:
    - master

.auto_devops: &auto_devops |
  http_status_code=`curl -o .auto_devops.sh -s -m 10 --connect-timeout 10 -w %{http_code} "${CHOERODON_URL}/devops/ci?token=${Token}&type=front"`
  if [ "$http_status_code" != "200" ]; then
    cat .auto_devops.sh
    exit 1
  fi
  source .auto_devops.sh
  function node_module(){
      mkdir -p /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
      yarn
  }

  function node_build(){
      chmod -R 777 node_modules
      # yarn dll # 需要在 build 之前执行 dll
      # yarn build
      yarn build:production
  }

  function docker_build(){
      cp -r /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}/* ${1:-"."}
      docker login -u ${DOCKER_USER} -p ${DOCKER_PWD} ${DOCKER_REGISTRY}
      docker build --pull -t ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG} ${1:-"."}
      docker push ${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG}
      echo "${DOCKER_REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}:${CI_COMMIT_TAG}"
  }

before_script:
  - *auto_devops

